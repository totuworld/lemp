---
- name: create redis working directory
  file: path={{ redis_dir }} state=directory
        recurse=yes
        owner={{ redis_user }}

- name: create redis init script
  template: src="templates/{{ ansible_os_family }}/redis.init.j2" dest=/etc/init.d/redis_{{ redis_port }}
            mode=0755
  when: redis_as_service
 
- name: set redis to start at boot
  service: name=redis_{{ redis_port }} enabled=yes
  when: redis_as_service
   
- name: check if log file exists
  stat: path={{ redis_logfile }}
  register: logfile_stat
  
- name: ensure pidfile directory exists and has correct owner
  file: path={{ redis_pidfile|dirname }}
        owner={{ redis_user }}
        state=directory
        recurse=yes

- name: ensure logfile directory exists and has correct owner
  file: path={{ redis_logfile|dirname }}
        owner={{ redis_user }}
        state=directory
        recurse=yes
  when: redis_logfile

- name: ensure that log file exists and is writable by redis
  file: path={{ redis_logfile }}
        owner={{ redis_user }}
        group={{ redis_user }}
        mode=0600
        state=touch
  when: logfile_stat.stat.exists == False and redis_logfile != '""'

- name: create redis config file
  template: src=templates/redis.conf.j2 dest=/etc/redis/{{ redis_port }}.conf
            owner={{ redis_user }}
  notify: restart redis

- name: add redis init config file
  template: dest=/etc/default/redis_{{ redis_port }}
            src=templates/redis.init.conf.j2
  notify: restart redis

# Flush handlers before ensuring the service is started to prevent
# a start and then restart
- name: flush handlers to apply config changes
  meta: flush_handlers

- name: ensure redis is running
  service: name=redis_{{ redis_port }} state=started
  when: redis_as_service